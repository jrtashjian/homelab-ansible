# System Prerequisites
- name: Install Minecraft server dependencies
  become: true
  ansible.builtin.apt:
    state: present
    update_cache: yes
    package:
      - git
      - build-essential
      - openjdk-17-jre-headless

- name: Create Minecraft system user
  become: true
  ansible.builtin.user:
    name: minecraft
    system: yes
    home: /opt/minecraft
    shell: /bin/bash

# Directory Structure
- name: Create required directories
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - /opt/minecraft/plugins
    - /opt/minecraft/plugins/floodgate
  tags:
    - permissions

# Server Software
- name: Determine latest Velocity build
  ansible.builtin.uri:
    url: https://api.papermc.io/v2/projects/velocity/version_group/3.0.0/builds
  register: request_velocity
  failed_when: request_velocity.status != 200
  retries: 3
  delay: 5
  tags:
    - software_update

- name: Stop minecraft-proxy service before updating files (if running)
  become: true
  ansible.builtin.service:
    name: minecraft-proxy
    state: stopped
  ignore_errors: yes
  tags:
    - software_update

- name: Download server and plugin files
  become: true
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    force: yes
  loop:
    - { url: "https://api.papermc.io/v2/projects/velocity/versions/{{ request_velocity.json.builds[-1].version }}/builds/{{ request_velocity.json.builds[-1].build }}/downloads/{{ request_velocity.json.builds[-1].downloads.application.name }}", dest: /opt/minecraft/velocity.jar }
    - { url: "https://download.luckperms.net/1576/velocity/LuckPerms-Velocity-5.4.159.jar", dest: /opt/minecraft/plugins/LuckPerms.jar }
    - { url: "https://download.geysermc.org/v2/projects/geyser/versions/latest/builds/latest/downloads/velocity", dest: /opt/minecraft/plugins/Geyser.jar }
    - { url: "https://download.geysermc.org/v2/projects/floodgate/versions/latest/builds/latest/downloads/velocity", dest: /opt/minecraft/plugins/floodgate.jar }
    - { url: "https://ci.opencollab.dev/job/GeyserMC/job/Floodgate/job/fix-weird-via-issue/lastSuccessfulBuild/artifact/database/sqlite/build/libs/floodgate-sqlite-database.jar", dest: /opt/minecraft/plugins/floodgate/floodgate-sqlite-database.jar }
  notify: restart minecraft-proxy
  when: not ansible_check_mode
  register: download_result
  retries: 3
  delay: 5
  until: download_result is success
  tags:
    - software_update

# Configuration
- name: Configure Velocity
  become: true
  ansible.builtin.template:
    src: opt/minecraft/velocity.toml.j2
    dest: /opt/minecraft/velocity.toml
  notify: restart minecraft-proxy
  tags:
    - config_update

# Service Setup
- name: Create systemd service
  become: true
  ansible.builtin.template:
    src: etc/systemd/system/minecraft-proxy.service.j2
    dest: /etc/systemd/system/minecraft-proxy.service
    owner: root
    group: root
    mode: '0644'
  register: service_file
  notify: restart minecraft-proxy
  tags:
    - config_update

- name: Reload systemd daemon if service file was updated
  become: true
  ansible.builtin.systemd:
    daemon_reload: yes
  when: service_file.changed
  tags:
    - config_update

- name: Set appropriate ownership for Minecraft directory
  become: true
  ansible.builtin.file:
    path: /opt/minecraft
    state: directory
    recurse: yes
    owner: minecraft
    group: minecraft
    mode: '0755'
  tags:
    - permissions
    - config_update

- name: Enable and start minecraft-proxy service
  become: true
  ansible.builtin.service:
    name: minecraft-proxy
    enabled: yes
    state: started
  when: not ansible_check_mode
  tags:
    - software_update
    - config_update