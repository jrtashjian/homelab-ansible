- name: Check if Docker is already installed.
  ansible.builtin.stat: path=/usr/bin/docker
  register: docker_file

- name: Check if Docker repository is already installed.
  ansible.builtin.stat: path=/etc/apt/sources.list.d/docker.list
  register: docker_repo

- name: Set fact for forcing repository installation
  ansible.builtin.set_fact:
    docker_force_repo_install: "{{ 'docker-repo-install' in ansible_run_tags }}"

- name: Install required dependencies.
  become: true
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
  when: not docker_file.stat.exists

- name: Import Docker GPG key.
  become: true
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
  when: not docker_repo.stat.exists or docker_force_repo_install
  tags: docker-repo-install

- name: Add Docker package source.
  become: true
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
    state: present
    update_cache: true
  when: not docker_repo.stat.exists or docker_force_repo_install
  tags: docker-repo-install

- name: Install Docker components.
  become: true
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: latest

- name: Enable Docker service at boot.
  become: true
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Ensure ansible user has Docker privileges.
  become: true
  ansible.builtin.user:
    append: yes
    groups: "docker"
    name: "{{ ansible_user }}"